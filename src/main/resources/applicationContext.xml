<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">
		
	<!-- 统一异常处理方式 -->
	<bean id="exceptionHandler" class="com.acoreful.notebook.commons.exception.MyExceptionHandler"/>
	
	<!-- 使用Spring组件扫描的方式来实现自动注入bean -->
	<!-- <context:component-scan base-package="com.acoreful.notebook">
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller" />
		<context:exclude-filter type="annotation" expression="org.springframework.web.bind.annotation.ControllerAdvice" />
	</context:component-scan> -->
	
	<!-- 初始化数据 -->
	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer" >
       <property name ="locations">
           <list>
            <value>classpath:jdbc.properties</value>
           </list>
       </property>
       <property name="ignoreUnresolvablePlaceholders" value="true" />
	</bean>
	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="driverClassName" value="${jdbc.driverClass}" />
	</bean>
	
	<!-- <bean id="pagePlugin" class="com.github.pagehelper.PageHelper">
		<property name="properties">
			 <value>
                 dialect=mysql
                 reasonable=true
                 supportMethodsArguments=true
                 params=count=countSql
                 autoRuntimeDialect=true
             </value>
		</property>
	</bean> -->
	
	<bean id="pagePlugin" class="com.acoreful.notebook.commons.mybatis.plugins.PagePlugin">
		<property name="properties">
			<props>
				<prop key="dialect">mysql</prop>
				<prop key="pageSqlId">.*query.*</prop>
			</props>
		</property>
	</bean>
	
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!-- 自动匹配Mapper映射文件 -->
		<property name="mapperLocations" value="classpath:mappings/*-mapper.xml"/>
		<property name="typeAliasesPackage" value="com.acoreful.notebook.entity"/>
		<property name="plugins">
			<array>
				<ref bean="pagePlugin" />
			</array>
		</property>
	</bean>
	<!-- 通过扫描的模式，扫描目录在com.acoreful.notebook.mapper目录下，所有的mapper都继承SqlMapper接口的接口， 这样一个bean就可以了 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.acoreful.notebook.mapper" />
	</bean>
	<!-- 事务配置 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<!-- <aop:config>
		<aop:pointcut
			expression="execution(public * com.acoreful.notebook.controller.*(..))"
			id="pointcut" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="pointcut" />
	</aop:config>
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="query*" propagation="REQUIRED" read-only="true" />
			<tx:method name="find*" propagation="REQUIRED" read-only="true" />
			<tx:method name="save*" propagation="REQUIRED" />
			<tx:method name="delete*" propagation="REQUIRED" />
			<tx:method name="add*" propagation="REQUIRED" />
			<tx:method name="modify*" propagation="REQUIRED" />
			<tx:method name="logicDelById" propagation="REQUIRED" />
		</tx:attributes>
	</tx:advice> -->
	<!-- <aop:aspectj-autoproxy proxy-target-class="true"/> 
	 <bean id="log4jHandlerAOP" class="com.acoreful.notebook.logAop.LogAopAction"></bean> 
		<aop:config proxy-target-class="true">
		    <aop:aspect id="logAspect" ref="log4jHandlerAOP"> 
		    <aop:pointcut id="logPointCut" expression="execution(* org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(..))" /> 
		    <aop:around method="logAll" pointcut-ref="logPointCut" /> </aop:aspect> 
		</aop:config> -->
	<!-- 隐式地向 Spring 容器注册 -->
	<context:annotation-config />
	<!-- <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
	    <property name="basePackage" value="com.github.abel533.mapper,com.github.abel533.mapperhelper"/>
	</bean>
	
	<bean class="com.github.abel533.mapperhelper.MapperHelper"
        depends-on="sqlSession" init-method="initMapper" scope="singleton" lazy-init="false">
	    <property name="mappers">
	        <array>
	            <value>com.github.abel533.mapper.Mapper</value>
	        </array>
	    </property>
	    <property name="sqlSessions" ref="sqlSession"/>
	</bean>
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate" scope="prototype">
	    <constructor-arg index="0" ref="sqlSessionFactory"/>
	</bean> -->
</beans>